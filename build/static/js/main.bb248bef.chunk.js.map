{"version":3,"sources":["Result.jsx","ResultsComponent.jsx","DetailComponent.jsx","SearchBar.jsx","TopResult.jsx","TopTenList.jsx","App.js","serviceWorker.js","index.js"],"names":["result","_this","this","react_default","a","createElement","lib","m","s","className","onClick","props","onView","horizontal","header","image","artwork","artistName","trackName","album","Component","ResultsComponent","searchResults","map","Result","key","previewUrl","collectionName","artworkUrl100","releaseDate","trackLength","trackTimeMillis","genre","primaryGenreName","appleMusicUrl","collectionViewUrl","trackPrice","albumPrice","collectionPrice","type","wrapperType","DetailComponent","dateToFormat","selected","lengthToFormat","detailView","src","alt","height","width","dist_default","format","toFixed","href","substr","length","ref","controls","slice","returnToSearch","searchbar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onKeyPress","e","search","state","searchTerm","updateInput","bind","assertThisInitialized","handleSubmit","event","setState","target","value","id","placeholder","onChange","style","display","topresult","onSearch","TopTenList","items","topten","TopResult","_id","App","results","dbData","handleViewItem","item","query","_this2","fetch","then","resp","json","catch","error","console","log","_this3","prevSearch","handleSearch","getDataFromDb","SearchBar","src_ResultsComponent","src_TopTenList","backToSearch","src_DetailComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb248bef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, Col, CardTitle} from 'react-materialize'\r\n\r\n class result extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t<Col m={12} s={12}>\r\n\t\t\t\t\t<div className=\"cardResult\" onClick = {() => this.props.onView(this.props)}>\r\n  \t\t\t\t\t\t<Card horizontal header={<CardTitle image={this.props.artwork}></CardTitle>}>\r\n      \t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tArtist : {this.props.artistName}<br />\r\n\t\t\t\t\t\t\t\tTrack : {this.props.trackName || this.props.album}<br />\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\r\n    \t\t\t\t\t</Card>\r\n   \t\t\t\t\t </div>\r\n\t\t\t\t</Col>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default result;","import React, { Component } from 'react';\r\nimport Result from './Result'\r\n\r\nclass ResultsComponent extends Component {\r\n\trender() {\r\n\r\n\t\r\n\t\treturn (\r\n\t\t\t\t<ul className=\"theShelf\">\r\n\t\t\t\t{this.props.searchResults.map(result => <Result\r\n\t\t\t\t key={result.previewUrl} \r\n\t\t\t\t artistName={result.artistName}\r\n\t\t\t\t trackName={result.trackName}\r\n\t\t\t\t album={result.collectionName}\r\n\t\t\t\t artwork={result.artworkUrl100}\r\n\t\t\t\t releaseDate={result.releaseDate}\r\n\t\t\t\t trackLength={result.trackTimeMillis}\r\n\t\t\t\t genre={result.primaryGenreName}\r\n\t\t\t\t previewUrl={result.previewUrl}\r\n\t\t\t\t appleMusicUrl={result.collectionViewUrl}\r\n\t\t\t\t trackPrice={result.trackPrice}\r\n\t\t\t\t albumPrice={result.collectionPrice}\r\n\t\t\t\t type={result.wrapperType}\r\n\t\t\t\t primaryGenreName={result.primaryGenreName}\r\n\r\n\t\t\t\t onView={this.props.onView} \r\n\t\t\t\t />)}\r\n\r\n\t\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default ResultsComponent;","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport {Col, Card, Chip} from 'react-materialize'\r\n\r\n class DetailComponent extends Component {\r\n\trender() {\r\n\t\t\t   const dateToFormat = this.props.selected.releaseDate;\r\n\t\t\t   const lengthToFormat = this.props.selected.trackLength\r\n\t\t\t   const wrapperType = this.props.selected.type ==='track';\r\n\r\n\t\tif(this.props.detailView) {\r\n\t\t\treturn (\r\n\t\t<div className = \"detailWrapper\">\r\n\t\t\t<Col m={6} s={6}>\r\n  \t\t\t<Card horizontal>\r\n      \t\t<p>\r\n      \t\t<img src={this.props.selected.artwork} alt=\"\" height=\"100\" width=\"100\"/><br />\r\n\t\t\tArtist : {this.props.selected.artistName}<br />\r\n\t\t\tTrack : {this.props.selected.trackName || this.props.selected.album}<br />\r\n\t\t\tAlbum : {this.props.selected.album}<br /><br />\r\n\t\t\tLength: <Moment format=\"mm:ss\">{lengthToFormat}</Moment><br/>\r\n\t\t\tRelease Date : <Moment format=\"D/M/YYYY\">{dateToFormat}</Moment><br/>\r\n\t\t\tGenre: {this.props.selected.genre || this.props.selected.primaryGenreName}<br /><br />\r\n\t\t\tTrack Price: ${wrapperType ? this.props.selected.trackPrice.toFixed(2) : this.props.selected.albumPrice.toFixed(2)}<br />\r\n\t\t\tAlbum Price: ${this.props.selected.albumPrice.toFixed(2)}<br />\r\n\t\t\t<a href={this.props.selected.appleMusicUrl}>View in Apple Music</a> <br /><br />\r\n\t\t\t{this.props.selected.previewUrl.substr(this.props.selected.previewUrl.length - 3) === 'm4a' ? <audio ref=\"audio_tag\" src={this.props.selected.previewUrl} controls /> : <video width =\"480\" height=\"351\" controls>\r\n\t\t\t<source src={this.props.selected.previewUrl.slice(0, -3) + 'mp4'} type=\"video/mp4\" ></source></video>};\t\r\n\t\t\t </p>\r\n\t\t\t<Chip className=\"topResult backBtn\" onClick = {() => this.props.returnToSearch(this.props.selected.artistName)}>Back</Chip>\r\n    \t</Card>\r\n\r\n\t\t\t</Col>\r\n\r\n</div>\r\n\t\t);\r\n\t\t}\r\n\r\n\t\tif(!this.props.detailView) {\r\n\t\treturn null;\r\n\t\t}\r\n\t\t   \r\n\t}\r\n}\r\n\r\nexport default DetailComponent;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass searchbar extends Component {\r\n\r\n  constructor(props){\r\nsuper(props);\r\n\r\nthis.state = {\r\n  searchTerm : ''\r\n}\r\n\r\nthis.updateInput = this.updateInput.bind(this);\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\nthis.onKeyPress = this.onKeyPress.bind(this);\r\n}\r\n\r\nupdateInput(event){\r\nthis.setState({searchTerm : event.target.value})\r\n}\r\n\r\nhandleSubmit(){\r\nthis.props.search(this.state.searchTerm)\r\n}\r\n\r\nonKeyPress = (e) => {\r\n\r\n        if(e.key === 'Enter'){\r\n          this.props.search(this.state.searchTerm)\r\n        }\r\n    }\r\n\r\nrender(){\r\n\r\n\tif(!this.props.detailView) {\r\nreturn (\r\n    <div className=\"input-field\">\r\n    <input id=\"searchbar\" placeholder=\"Search for Artist or Track...\" onChange={this.updateInput}  onKeyPress={this.onKeyPress}></input>\r\n    <input type=\"submit\" onClick={this.handleSubmit} style={{display: 'none'}}></input>\r\n    </div>\r\n  );\r\n}\r\n\t\tif(this.props.detailView) {\r\n\t\treturn null;\r\n\t\t}\r\n}\r\n}\r\n\r\nexport default searchbar;","import React, { Component } from 'react';\r\n\r\n class topresult extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t<li className=\"collection-item topResult\" onClick = {() => this.props.onSearch(this.props.artistName)}>\r\n\t{this.props.artistName}\r\n\t</li>\r\n\r\n\t\t);\r\n\t}\r\n}\r\nexport default topresult;","import React, { Component } from 'react';\r\nimport TopResult from './TopResult'\r\n\r\nclass TopTenList extends Component {\r\n\r\n\trender(){\r\n\r\n\t\tlet allResults = this.props.topten;\r\n\t\tvar size = 10;\r\n\t\tlet items = allResults.slice(0, size)\r\n\r\n\tif(!this.props.detailView) {\r\nreturn (\r\n\t<div className=\"topTenList\">\r\n\t\t\t<ul className=\"collection with-header\">\r\n\t\t\t        <li className=\"collection-header\"><h4>Top 10 Searches</h4></li>\r\n\t\t\t\t{items.map(result => <TopResult\r\n\t\t\t\t key={result._id} \r\n\t\t\t\t artistName={result._id} \r\n\t\t\t\t onSearch={this.props.returnToSearch} \r\n\t\t\t\t />)}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n  );\r\n}\r\n\t\tif(this.props.detailView) {\r\n\t\treturn null;\r\n\t\t}\r\n}\r\n}\r\n\r\n\r\nexport default TopTenList;","import React, { Component } from 'react';\nimport ResultsComponent from './ResultsComponent';\nimport DetailComponent from './DetailComponent';\nimport SearchBar from './SearchBar';\nimport TopTenList from './TopTenList';\nimport './App.css';\nimport { Row, Col } from 'react-materialize'\n\nclass App extends Component {\n\n\n    state = {\n\n        results: [],\n        searchTerm: '',\n        selected: [],\n        detailView: false,\n        dbData: [],\n    }\n\n    handleSearch(query) {\n\n        fetch('/search/' + query)\n            .then(resp => resp.json())\n            .then(results => {\n                this.setState({\n                    results: results,\n                    detailView: false,\n                    selected: []\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n\n    }\n\n    getDataFromDb() {\n\n        fetch('/getData')\n            .then(resp => resp.json())\n            .then(results => {\n                this.setState({\n                    dbData: results\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n\n    }\n\n    backToSearch(prevSearch) {\n        this.handleSearch(prevSearch)\n        this.getDataFromDb()\n    }\n\n    handleViewItem = (item) => {\n        let selected = item\n        this.setState({\n            results: [],\n            detailView: true,\n            selected: selected\n        })\n    }\n\n    componentDidMount() {\n        this.getDataFromDb()\n    }\n\n    render() {\n\n        return (\n\n            <div>\n        <Row>     \n  <Col s={6}>\n\n     <SearchBar\n            search={this.handleSearch.bind(this)}\n            detailView={this.state.detailView}>\n            </SearchBar>\n                        <ResultsComponent\n            searchResults={this.state.results}\n            onView={this.handleViewItem}>\n            </ResultsComponent>\n  </Col>\n  <Col s={6}>\n       \n            <TopTenList\n            topten={this.state.dbData}\n            detailView={this.state.detailView}\n            returnToSearch={this.backToSearch.bind(this)}>\n            </TopTenList>\n  </Col>\n</Row>\n\n\n\n            <DetailComponent\n            selected={this.state.selected}\n            detailView={this.state.detailView}\n            returnToSearch={this.backToSearch.bind(this)}\n            >\n            </DetailComponent>\n        </div>\n\n        );\n\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}